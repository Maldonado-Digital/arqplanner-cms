/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    customers: Customer;
    organizations: Organization;
    works: Work;
    media: Media;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  role?: ('super_admin' | 'admin' | 'editor') | null;
  organization?: (string | null) | Organization;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organizations".
 */
export interface Organization {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: string;
  name: string;
  phone_number?: string | null;
  social_media?: string | null;
  works: string | Work;
  organization: string | Organization;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "works".
 */
export interface Work {
  id: string;
  title: string;
  steps?:
    | {
        step: {
          title: string;
          is_completed?: boolean | null;
        };
        id?: string | null;
      }[]
    | null;
  events?:
    | {
        event: {
          title: string;
          description: string;
          date: string;
          address: string;
          professional_name: string;
          contact_number: string;
          profession?: string | null;
          contact_email?: string | null;
          instagram?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  projects?:
    | {
        project: {
          title: string;
          status: 'pending' | 'approved' | 'archived';
          type: 'executive' | 'wood_detailing' | 'wet_spaces_detailing';
          comments?: string | null;
          file: string | Media;
        };
        id?: string | null;
      }[]
    | null;
  photos?:
    | {
        photo: {
          title: string;
          files?:
            | {
                uploads: string | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
      }[]
    | null;
  renders?:
    | {
        render: {
          title: string;
          status: 'pending' | 'approved' | 'archived';
          comments?: string | null;
          files?:
            | {
                uploads: string | Media;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
      }[]
    | null;
  documents?:
    | {
        document: {
          title: string;
          type: 'offers' | 'briefings' | 'contracts' | 'meeting_minutes' | 'other';
          file: string | Media;
        };
        id?: string | null;
      }[]
    | null;
  quotes?:
    | {
        quote: {
          title: string;
          file: string | Media;
        };
        id?: string | null;
      }[]
    | null;
  organization: string | Organization;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  organization?: (string | null) | Organization;
  works?: (string | Work)[] | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'users';
        value: string | User;
      }
    | {
        relationTo: 'customers';
        value: string | Customer;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}